Revision history for Git-Repository

1.11 Sat Oct  2 18:17:33 CEST 2010
        [ENHANCEMENTS]
        - fixed a bug in version comparison
          (version 1.7.1.209.gd60ad81 is smaller than 1.7.1.1.1.g66bd8ab)
        [TESTS]
        - fix abs_path dying on Win32 with a path to a non-existent file
          (again)

1.10 Fri Sep 24 18:04:05 CEST 2010
        [ENHANCEMENTS]
        - Git::Repository::Command doesn't write to the command stdin
          if the input option is set to something empty
        - Git::Repository::Command now has a version number too
        [DOCUMENTATION]
        - minor copy editing by Aristotle Pagaltzis

1.09 Thu Aug 19 00:34:47 CEST 2010
        [ENHANCEMENTS]
        - now handle SIGPIPE when writing to git stdin
          (fixes RT bug #60482, reported by Todd Rinaldo (TODDR))
        - new() ignores the 'input' option for git commands called
          during initialization
        [TESTS]
        - t/20-simple.t should stop failing with "Non-zero wait status: 13"
          as it has been doing since 1.05.

1.08 Tue Aug 17 14:49:11 CEST 2010
        [ENHANCEMENTS]
        - Git::Repository->new() now supports git versions older than 1.5.3
        [TESTS]
        - ensure we have some identity when committing
        - make tests require the lowest git version they support

1.07 Sat Aug 14 16:52:21 CEST 2010
        [ENHANCEMENTS]
        - support for option hash in create(), which is attached to the
          returned Git::Repository object
        - accessors for Git::Repository::Command objects
          (including a 'cmdline' accessor)
        - removed the wc_subdir() attribute, which is useless and
          redundant with the cwd option
        - completely rewrote the repo_path and wc_path computation in new()
        - support new (post-v1.7.1) clone output in create()
        - less confusing names for options and attributes:
          + new() now takes git_dir and work_tree
            (instead of repository and working_copy)
          + the corresponding attributes are now git_dir and work_tree
            (instead of repo_path and wc_path)
          + the older options and attributes are being kept for compatibility
        [TESTS]
        - tests for the case when GIT_DIR is not .git (Mark Lawrence)
        - protect git log tests against format.pretty (Aristotle Pagaltzis)
        - tests for backward-compatibility with repository, working_copy, etc.

1.06 Sat Jul  3 22:02:59 CEST 2010
        [ENHANCEMENTS]
        - none
        [TESTS]
        - just make sure all tests fail gracefully when git is not installed

1.05 Sat Jul  3 00:40:09 CEST 2010
        [ENHANCEMENTS]
        - version() method returns the git binary version
        - version_eq(), version_gt(), etc allow simple version comparison
          for the current git binary
        - allow providing a default option hash to Git::Repository->new()
        [DOCUMENTATION]
        - Document git init behaviour changed in 1.6.5
        [TESTS]
        - extensive version comparison tests

1.04 Sun Jun 27 17:24:02 CEST 2010
        [ENHANCEMENTS]
        - create() now supports "reinitializing existing Git repository"
          (thanks to Michael G. Schwern)
        [TESTS]
        - test a few extra cases

1.03 Sat Jun 19 00:27:28 CEST 2010
        [ENHANCEMENTS]
        - fix module to work with Perl 5.6.x
        - support GIT_DIR & GIT_WORK_TREE environment variables, when
          run without a Git::Repository object, and even allow an
          override when there is one, for those who know what they're
          doing
        [TESTS]
        - fix the case where /tmp is a symlink to some other place
        - fix abs_path dying on Win32 with a path to a non-existent file

1.02 Wed Jun 16 01:27:17 CEST 2010
        [ENHANCEMENTS]
        - sensible defaults for Git::Repository->new() without parameters
        - correctly setup Git::Repository if working_copy points to a
          subdirectory of the actual work tree
        - wc_subdir() points to the given subdirectory
        [TESTS]
        - skip tests that fail if /tmp is a git repository

1.01 Mon Jun 14 08:17:38 CEST 2010
        [ENHANCEMENTS]
        - consider git failing with a usage message as a fatal error
        [TESTS]
        - don't bother testing too much if git is older than v1.6.0

1.00 Sat Jun 12 11:50:06 CEST 2010
        [YET ANOTHER GIT WRAPPER]
        - Git::Repository provides context and a simple run() method
        - Git::Repository::Command is the actual workhorse
        - 94% test coverage

